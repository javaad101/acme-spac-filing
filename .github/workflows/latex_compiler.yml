name: LaTeX Document Compiler

# 1. WHEN TO RUN THIS WORKFLOW
on:
  # This workflow runs whenever code is pushed to the 'master' branch.
  # This ensures the final PDF is generated immediately after a PR is merged.
  push:
    branches:
      - master
  # Also allow manual runs for testing or on-demand generation.
  workflow_dispatch:

# 2. DEFINING THE JOB
jobs:
  build_latex_document:
    # Use a standard Ubuntu environment for the compilation job
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      # Step 2: Set up the TeX environment
      - name: Setup TeX Live
        # Uses a pre-built action that installs a full TeX distribution
        uses: xu-cheng/latex-action@v2
        with:
          # We use the master file name (spac_statement.tex) as the entry point
          root_file: spac_statement.tex
          # The full distribution ensures packages like 'changes' are available
          compiler: pdflatex
          
      # Step 3: Compile the document twice for TOC and references
      - name: Compile Document (Pass 1)
        run: pdflatex spac_statement.tex
        
      # Step 4: Compile the document a second time to ensure ToC is correct
      - name: Compile Document (Pass 2)
        run: pdflatex spac_statement.tex
        
      # Step 5: Upload the final compiled PDF as a workflow 'Artifact'
      - name: Upload PDF Artifact
        uses: actions/upload-artifact@v4
        with:
          name: SPAC_Registration_Statement_Clean
          # The PDF generated by the compiler
          path: spac_statement.pdf
          
      # Step 6: Create a Tagged Release on GitHub (The final, controlled release)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: V-${{ github.sha }} # Use the unique commit ID as the version tag
          release_name: Official Document Build - ${{ github.sha }}
          draft: false
          prerelease: false

      # Step 7: Attach the PDF to the new Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./spac_statement.pdf
          asset_name: SPAC_Statement_${{ github.sha }}.pdf
          asset_content_type: application/pdf
